const axios = require('axios');
const DomParser = require('dom-parser');
var fs = require('fs');

async function manufactures() {
  console.log('STARTARTA')

  const parser = new DomParser

  const { data: list } = await axios('https://www.motorcyclespecs.co.za/Manufacturer.htm');


  const dom = parser.parseFromString(list)

  const manufacturesList = dom.getElementById('table702').getElementsByTagName('a').map(i => {
    return {
      link: i.attributes.find(i => i.name === 'href').value,
      name: i.textContent.replace(/\n|\t/g, '').replace('&amp;', '&')
    }
  })
  console.log(manufacturesList)

  return manufacturesList
}
async function models() {
  console.log('STARTARTA')

  const parser = new DomParser
  let page = 1
  let con = true
  let modelList = []
  let items = [];
  let years = [];
  let linki = [];
  do {
  const data = await axios(`https://www.motorcyclespecs.co.za/bikes/KTM${page === 1 ? '' : page}.htm`).catch(e => ({ data: { status: 404 } }));
  if (data.status === 200) {

    const list = data.data
    const tables = list.match(/(?<=border="5")(.*?)<\/table>/gs)
    const modelList = await Promise.all(tables.map(tab => {
      const table1 = parser.parseFromString(tab);
      const row = table1.getElementsByTagName('tr').flatMap(tr => {
        return tr.getElementsByTagName('td').map(td => {
          const width = td.getAttribute('width')
          const height = td.attributes.find(att => att.name === 'height')
          console.log(width, height)
          if (width && height && (height.value === '40'| height.value === '36')) {
            items = width && width === '1371' ? td.getElementsByTagName('a').map(i => {
              const link = i.attributes.find(i => i.name === 'href').value
              return /\.\.\/model/.test(link) ? {
                link,
                name: i.textContent.replace(/\n|\t/g, '').replace('&amp;', '&').replace('&nbsp;', ' ')
              } : null
            }).filter(Boolean) : null
            years = td.getElementsByTagName('font').map(i => {
              const year = i.textContent
              return /\d\d\d\d-\d\d|\d\d\d\d/gm.test(year) && year.length < 9 ?
                year.replace(/\n/g, '').trim()
                : null
            }).filter(Boolean)
            return years && items && years.length && items.length ? {
              name: items[0].name,
              link: items[0].link,
              year: years[0]
            } : undefined
          }
        })
      }).filter(Boolean)
      const result = [...new Map(row.map(item => [item['link'], item])).values()]
      return result
    }))
    linki.push(modelList.flatMap(item => item))
    // console.log(modelList.flatMap(item => item))
    page++
  } else { con = false }
} while (con)
  console.log(linki.flatMap(item => item).flatMap(item => item), linki.flatMap(item => item).flatMap(item => item).length)
  return modelList

}

async function product() {
  const parser = new DomParser

  const { data: page } = await axios('https://www.motorcyclespecs.co.za/model/aprilia/aprilia_af1_125_futura_90.html');
  const dom = parser.parseFromString(page)
  const title = dom.getElementsByTagName('h1')[0].innerHTML.replace('&amp;', '&')

  const description = dom.getElementsByTagName('p').map(desc => {
    console.log(desc.textContent.trim().replace(/\s\s/gm, ''))
  })
  // .replace('<p class="auto-translated-information-text"><i>To jest automatyczne tłumaczenie wygenerowane przez software:</i></p><p> Zapasowy olej przekładniowy 80W-90 GL-5, numer części 99000-22930-046, to oryginalna część Suzuki, co oznacza, że jest dokładnie taka sama, jak ta zamontowana fabrycznie, gdy pojazd był nowy </p>', '')
  // .replace(/<a.+(?=">)">/gm, '')
  // .replace(/<\/a>/gm, '')
  // .replace(/<button.*\n.+\n.+/gm, '')
  console.log(description)

  const images = dom.getElementById('carousel').getElementsByTagName('img').map(image => {
    const src = image.attributes.find(i => i.name === 'src')
    return src.value.replace('-300x200', '')
  })

  const price = dom.getElementsByClassName('pcd-price')[0].textContent.replace('&nbsp;zł', '').replace(/ /gm, '')

  const specs = dom.getElementsByClassName('pcd-specs')

  const factory = specs[0].getElementsByTagName('span')[0].innerHTML.trim()
  const model = specs[1].getElementsByTagName('span')[0].innerHTML.trim()

  const year = specs[2].getElementsByTagName('span')[0].innerHTML.trim()

  const breadcrumbs = dom.getElementsByClassName('breadcrumbs')
  const category = breadcrumbs.map(i => i.innerHTML)
  // const status = dom.getElementsByClassName('shadow-box')[0]

  // category ? category.shift() : []

  const product = {
    title,
    description,
    price,
    factory,
    model,
    year,
    category,
    images,
    // status: status ? 'Aktywna' : 'Niekatywna'
  }
  console.log(product, ' product')
  return product;
}
models().catch(error => {
  console.log(error)
  process.exit(1);
});
